<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd">
    <!--开启组件扫描-->
    <context:component-scan base-package="com.MrLi" />
    <!--Thymeleaf 视图解析器-->
    <bean id="viewResolver" class="org.thymeleaf.spring5.view.ThymeleafViewResolver">
        <property name="order" value="1" />
        <property name="characterEncoding" value="utf-8" />
        <property name="templateEngine">
            <bean class="org.thymeleaf.spring5.SpringTemplateEngine">
                <property name="templateResolver">
                    <bean class="org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver">
                        <!--视图前缀-->
                        <property name="prefix" value="/WEB-INF/templates/" />
                        <!--视图后缀-->
                        <property name="suffix" value=".html" />
                        <property name="templateMode" value="html5" />
                        <property name="characterEncoding" value="utf-8" />
                    </bean>
                </property>
            </bean>
        </property>
    </bean>

    <!--开启对静态资源的访问-->
    <mvc:default-servlet-handler />
    <!--开启mvc注解驱动-->
    <mvc:annotation-driven />

    <!--配置文件上传解析器，将上传的文件封装为 MultipartFile-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />
    <!--配置拦截器-->
    <mvc:interceptors>
        <!--<bean class="com.MrLi.interceptor.FirstInterceptor" />-->
        <!--<ref bean="firstInterceptor" />-->
        <!--以上两种配置都是对DispatcherServlet所处理的所有请求进行拦截-->
        <mvc:interceptor>
            <!--需要拦截的范围-->
            <mvc:mapping path="/**"/>
            <!--不需要拦截的路径-->
            <mvc:exclude-mapping path="/"/>
            <!--配置拦截器-->
            <ref bean="firstInterceptor" />
        </mvc:interceptor>
        <!--以上配置方式可以通过ref或bean标签设置拦截器，通过mvc:mapping设置需要拦截的请求，
        通过mvc:exclude-mapping设置需要排除的请求，即不需要拦截的请求-->
    </mvc:interceptors>

    <!--配置异常处理-->
    <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="exceptionMappings">
            <props>
                <prop key="java.lang.ArithmeticException">error</prop>
            </props>
        </property>
        <!--设置将异常信息共享在请求域中的键-->
        <property name="exceptionAttribute" value="e" />
    </bean>
</beans>